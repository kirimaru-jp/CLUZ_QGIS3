# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'C:\Users\Bob\AppData\Roaming\QGIS\QGIS3\profiles\default\python\plugins\cluz3\forms\cluz_form_portfolio_results.ui'
#
# Created by: PyQt5 UI code generator 5.6
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets

class Ui_portfolioResultsDialog(object):
    def setupUi(self, portfolioResultsDialog):
        portfolioResultsDialog.setObjectName("portfolioResultsDialog")
        portfolioResultsDialog.setWindowModality(QtCore.Qt.ApplicationModal)
        portfolioResultsDialog.resize(768, 547)
        self.gridLayout = QtWidgets.QGridLayout(portfolioResultsDialog)
        self.gridLayout.setObjectName("gridLayout")
        self.portfolioTabWidget = QtWidgets.QTabWidget(portfolioResultsDialog)
        self.portfolioTabWidget.setMinimumSize(QtCore.QSize(750, 500))
        self.portfolioTabWidget.setTabsClosable(False)
        self.portfolioTabWidget.setObjectName("portfolioTabWidget")
        self.statusTab = QtWidgets.QWidget()
        self.statusTab.setObjectName("statusTab")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.statusTab)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.statusTabTableWidget = QtWidgets.QTableWidget(self.statusTab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.statusTabTableWidget.sizePolicy().hasHeightForWidth())
        self.statusTabTableWidget.setSizePolicy(sizePolicy)
        self.statusTabTableWidget.setMinimumSize(QtCore.QSize(500, 400))
        self.statusTabTableWidget.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.statusTabTableWidget.setAlternatingRowColors(True)
        self.statusTabTableWidget.setObjectName("statusTabTableWidget")
        self.statusTabTableWidget.setColumnCount(0)
        self.statusTabTableWidget.setRowCount(0)
        self.verticalLayout.addWidget(self.statusTabTableWidget)
        self.portfolioTabWidget.addTab(self.statusTab, "")
        self.patchTab = QtWidgets.QWidget()
        self.patchTab.setObjectName("patchTab")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.patchTab)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.spatialTabTableWidget = QtWidgets.QTableWidget(self.patchTab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.spatialTabTableWidget.sizePolicy().hasHeightForWidth())
        self.spatialTabTableWidget.setSizePolicy(sizePolicy)
        self.spatialTabTableWidget.setMinimumSize(QtCore.QSize(500, 400))
        self.spatialTabTableWidget.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.spatialTabTableWidget.setAlternatingRowColors(True)
        self.spatialTabTableWidget.setObjectName("spatialTabTableWidget")
        self.spatialTabTableWidget.setColumnCount(0)
        self.spatialTabTableWidget.setRowCount(0)
        self.horizontalLayout.addWidget(self.spatialTabTableWidget)
        self.portfolioTabWidget.addTab(self.patchTab, "")
        self.sfTab = QtWidgets.QWidget()
        self.sfTab.setObjectName("sfTab")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.sfTab)
        self.horizontalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.sfTabTableWidget = QtWidgets.QTableWidget(self.sfTab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.sfTabTableWidget.sizePolicy().hasHeightForWidth())
        self.sfTabTableWidget.setSizePolicy(sizePolicy)
        self.sfTabTableWidget.setMinimumSize(QtCore.QSize(500, 400))
        self.sfTabTableWidget.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.sfTabTableWidget.setAlternatingRowColors(True)
        self.sfTabTableWidget.setObjectName("sfTabTableWidget")
        self.sfTabTableWidget.setColumnCount(0)
        self.sfTabTableWidget.setRowCount(0)
        self.horizontalLayout_2.addWidget(self.sfTabTableWidget)
        self.portfolioTabWidget.addTab(self.sfTab, "")
        self.patchFeatTab = QtWidgets.QWidget()
        self.patchFeatTab.setObjectName("patchFeatTab")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout(self.patchFeatTab)
        self.horizontalLayout_3.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.patchFeatTabTableWidget = QtWidgets.QTableWidget(self.patchFeatTab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.patchFeatTabTableWidget.sizePolicy().hasHeightForWidth())
        self.patchFeatTabTableWidget.setSizePolicy(sizePolicy)
        self.patchFeatTabTableWidget.setMinimumSize(QtCore.QSize(500, 400))
        self.patchFeatTabTableWidget.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.patchFeatTabTableWidget.setAlternatingRowColors(True)
        self.patchFeatTabTableWidget.setObjectName("patchFeatTabTableWidget")
        self.patchFeatTabTableWidget.setColumnCount(0)
        self.patchFeatTabTableWidget.setRowCount(0)
        self.horizontalLayout_3.addWidget(self.patchFeatTabTableWidget)
        self.portfolioTabWidget.addTab(self.patchFeatTab, "")
        self.peTab = QtWidgets.QWidget()
        self.peTab.setObjectName("peTab")
        self.portfolioTabWidget.addTab(self.peTab, "")
        self.gridLayout.addWidget(self.portfolioTabWidget, 0, 0, 1, 1)
        self.closeButton = QtWidgets.QPushButton(portfolioResultsDialog)
        self.closeButton.setObjectName("closeButton")
        self.gridLayout.addWidget(self.closeButton, 1, 0, 1, 1)

        self.retranslateUi(portfolioResultsDialog)
        self.portfolioTabWidget.setCurrentIndex(0)
        self.closeButton.clicked.connect(portfolioResultsDialog.close)
        QtCore.QMetaObject.connectSlotsByName(portfolioResultsDialog)

    def retranslateUi(self, portfolioResultsDialog):
        _translate = QtCore.QCoreApplication.translate
        portfolioResultsDialog.setWindowTitle(_translate("portfolioResultsDialog", "Portfolio details table"))
        self.statusTabTableWidget.setSortingEnabled(True)
        self.portfolioTabWidget.setTabText(self.portfolioTabWidget.indexOf(self.statusTab), _translate("portfolioResultsDialog", "Status results"))
        self.spatialTabTableWidget.setSortingEnabled(True)
        self.portfolioTabWidget.setTabText(self.portfolioTabWidget.indexOf(self.patchTab), _translate("portfolioResultsDialog", "Spatial results"))
        self.sfTabTableWidget.setSortingEnabled(True)
        self.portfolioTabWidget.setTabText(self.portfolioTabWidget.indexOf(self.sfTab), _translate("portfolioResultsDialog", "Selection frequency results"))
        self.patchFeatTabTableWidget.setSortingEnabled(True)
        self.portfolioTabWidget.setTabText(self.portfolioTabWidget.indexOf(self.patchFeatTab), _translate("portfolioResultsDialog", "Patches per feature"))
        self.portfolioTabWidget.setTabText(self.portfolioTabWidget.indexOf(self.peTab), _translate("portfolioResultsDialog", "Protection equality"))
        self.closeButton.setText(_translate("portfolioResultsDialog", "Close"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    portfolioResultsDialog = QtWidgets.QDialog()
    ui = Ui_portfolioResultsDialog()
    ui.setupUi(portfolioResultsDialog)
    portfolioResultsDialog.show()
    sys.exit(app.exec_())

